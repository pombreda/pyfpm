#!/usr/bin/python
# -*- coding: utf-8 -*-

# ----------------------------------------------------------------------
#
#       Daemon pour pyFPM
#
# ----------------------------------------------------------------------

import os, sys, string, time, dbus
import dbus.service
from dbus.mainloop.glib import DBusGMainLoop
from gi.repository import GObject

from pacmang2.libpacman import *

class daemonPyfpm (dbus.service.Object):
	def __init__(self):
		bus=dbus.SystemBus()
		bus_name = dbus.service.BusName('org.frugalware.pyfpm', bus)
		dbus.service.Object.__init__(self, bus_name, '/org/frugalware/pyfpm')
        
	@dbus.service.method('org.frugalware.pyfpm', 'a{sb}', 's', sender_keyword='sender', connection_keyword='connexion')
	def Init(self, options, sender=None, connexion=None):
		if policykitTest(sender,connexion,'org.frugalware.pyfpm.init'):
			return 'ok'
		else:
			return 'You are not authorized'
            
	@dbus.service.method('org.manjaro.pamac', '', 's')
	def Refresh(self, db_list):
		index = 0
		for db in db_list:
			if index != 0:
				pourcentage = float(index - 1) / float(len(repo_list) - 1)
				valeur = pacman_db_update (1, element)
				if valeur == -1:
					return "[ERROR] Can't update pacman-g2"
			index += 1
			time.sleep(0.2)

	@dbus.service.method('org.frugalware.pyfpm')
	def StopDaemon(self):
		mainloop.quit()

	def policykitTest(self, sender,connexion, action):
		bus = dbus.SystemBus()
		proxy_dbus = connexion.get_object('org.freedesktop.DBus','/org/freedesktop/DBus/Bus', False)
		dbus_info = dbus.Interface(proxy_dbus,'org.freedesktop.DBus')
		sender_pid = dbus_info.GetConnectionUnixProcessID(sender)
		proxy_policykit = bus.get_object('org.freedesktop.PolicyKit1','/org/freedesktop/PolicyKit1/Authority',False)
		policykit_authority = dbus.Interface(proxy_policykit,'org.freedesktop.PolicyKit1.Authority')
		
		Subject = ('unix-process', {'pid': dbus.UInt32(sender_pid, variant_level=1), 'start-time': dbus.UInt64(0, variant_level=1)})
		(is_authorized,is_challenge,details) = policykit_authority.CheckAuthorization(Subject, action, {'': ''}, dbus.UInt32(1), '')
		return is_authorized
    
DBusGMainLoop(set_as_default=True)
myservice = daemonPyfpm()
mainloop = GObject.MainLoop()
mainloop.run()
